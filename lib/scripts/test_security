#!/usr/bin/env node

var apiKeyUtils = require('../utils/api_key_utils');
var http = require('http');
require('colors');

var apiKeyName = process.argv[2];
if (!apiKeyName) {
    console.log("apiKeyName is a required parameter".red);
    process.exit(1);
}

var data = getData();
var options = getOptions(data);

addAuthorizationHeader(options, data);
sendRequest(options, data);

function addAuthorizationHeader(options, data) {

    var canonicalizedHeaders = apiKeyUtils.getCanonicalizedHeaders(options.headers);
    var canonicalizedResource = apiKeyUtils.getCanonizalizedResource(options.path);
    var hmac = apiKeyUtils.createHmacHash(data, options.method, options.headers, canonicalizedHeaders, canonicalizedResource);
    var publicKey = apiKeyUtils.getPublicKey('client');

    options.headers['Authorization'] = apiKeyName + ' ' + publicKey + ':' + hmac;
}

function getData() {
    return JSON.stringify({
        message: 'Hello there!'
    });
}

function getOptions(data) {
    return {
        hostname: '127.0.0.1',
        port: 3000,
        path: '/secure/logger?name=value',
        method: 'POST',
        auth: '',
        headers: {
            'Date': '     ' + new Date().toString(),
            'Content-Type': 'application/json',
            'Content-Length': data.length
        }
    };
}

function sendRequest(options, data) {
    var req = http.request(options, function (res) {
        res.setEncoding('utf8');
        res.on('data', function (chunk) {
            console.log(res.statusCode + ' ' + chunk);
        });
    });
    req.on('error', function (e) {
        console.log('Problem with request: '.red + e.message);
    });
    req.write(data);
    req.end();
}